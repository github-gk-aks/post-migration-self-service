name: Fetch Environment Names

on:
  workflow_dispatch:

jobs:
  fetch-environments:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
            token: ${{ secrets.GK_PAT }}
            path: ./source-repo

      - name: Check if output directory exists
        run: |
            if [ ! -d "${{ github.workspace }}/source-repo/output" ]; then
                echo "Output directory does not exist. Creating..."
                mkdir -p "${{ github.workspace }}/source-repo/output"
            else
                echo "Output directory already exists."
            fi

      - name: Import GPG key
        run: |
            echo "${GPG_PRIVATE_KEY}" | gpg --batch --import
        env: 
            GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
    
      - name: Add the custom gpg signing program that passes the passphrase to the gpg CLI
        run: |
            rm -rf /tmp/gpg.sh
            echo '#!/bin/bash' >> /tmp/gpg.sh
            echo 'gpg --batch --pinentry-mode=loopback --passphrase $GPG_KEY_PASSPHRASE $@' >> /tmp/gpg.sh
            chmod +x /tmp/gpg.sh
    
      - name: Setup git
        run: |
            git config --global user.email ${{ secrets.GIT_COMMITTER_EMAIL }}
            git config --global user.name ${{ secrets.GIT_COMMITTER_NAME }}
            git config --global commit.gpgsign true
            git config --global user.signingkey $GPG_KEY_ID
            git config --global gpg.program /tmp/gpg.sh
        env:
            GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}

      - name: Fetch environment names
        run: |
          mapfile -t repositories < "${{ github.workspace }}/source-repo/repositories.txt"
          for repo in "${repositories[@]}"; do
            IFS='/' read -r org_name repo_name <<< "$repo"
            echo "Processing repository: $org_name/$repo_name"         
                     
            # Call GitHub API to fetch environments for the repository
            response=$(curl -sSL \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GK_PAT }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "https://api.github.com/repos/$org_name/$repo_name/environments")

            total_count=$(echo "$response" | jq -r '.total_count')
            if [[ $total_count -eq 0 ]]; then
                echo "$repo_name No environments configured" >> "${{ github.workspace }}/source-repo/output/get-environment-name.txt"
            else
                # Parse the response and extract environment names
                environment_names=$(echo "$response" | jq -r '.environments | .[] | .name')
                for environments in $environment_names; do
                # Output repository name and environment names to output.txt
                    echo "$repo_name $environment_names" >> "${{ github.workspace }}/source-repo/output/get-environment-name.txt"
                done
            fi
          done   
          
      - name: Commit Changes
        run: |
            cd ${{ github.workspace }}/source-repo/output
            if [ -n "$(git status --porcelain)" ]; then
            git pull origin
            git add get-environment-name.txt
            git commit -S -m "Add get-environment-name.txt - $(date +"%Y-%m-%d %H:%M:%S")" 
            git push
            else
            echo "No changes to commit."
            fi
            cd ${{ github.workspace }}
        env:
            GPG_KEY_PASSPHRASE: ${{ secrets.PASSPHRASE }}
            working-directory: ${{ github.workspace }}