name: Add License File

on:
  workflow_dispatch:

jobs:
  add-license:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout central repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GK_PAT }}
          path: ./source-repo

      - name: Add the custom gpg signing program that passes the passphrase to the gpg CLI
        run: |
            rm -rf /tmp/gpg.sh
            echo '#!/bin/bash' >> /tmp/gpg.sh
            echo 'gpg --batch --pinentry-mode=loopback --passphrase $GPG_KEY_PASSPHRASE $@' >> /tmp/gpg.sh
            chmod +x /tmp/gpg.sh
  
      - name: Setup git
        run: |
            git config --global user.email ${{ secrets.GIT_COMMITTER_EMAIL }}
            git config --global user.name ${{ secrets.GIT_COMMITTER_NAME }}
            git config --global commit.gpgsign true
            git config --global user.signingkey $GPG_KEY_ID
            git config --global gpg.program /tmp/gpg.sh
        env:
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}

      - name: Iterate Over Repos
        run: |
          mapfile -t repositories < <(awk '{print $1}' "${{ github.workspace }}/source-repo/data/repositories.txt" | sort -u)
          for repo in "${repositories[@]}"; do
            echo "Processing repository: $repo"

            # Clone target repository
            git clone --depth 1  "https://${{ secrets.GK_PAT }}@github.com/$repo.git" "./target-repo"

            # # Check default branch
            # #default_branch=$(git ls-remote --symref origin HEAD | grep -oP "refs/heads/\K.*")
            # default_branch=$(git ls-remote --symref https://github.com/$repo HEAD | awk -F '/' '/^ref:/{print $NF}' | awk '{print $1}')
            # echo "Default branch of $repo is: $default_branch"

            # Check if LICENSE file exists in default branch
            if [ ! -f "./target-repo/LICENSE" ]; then
              # Copy LICENSE file from source to target repository
              cd "${{ github.workspace }}/target-repo"
              git  remote  set-branches  --add  'origin'  'github-migration'
              git  fetch  'origin'
              git  checkout  --track  'origin/github-migration'
              if cp "${{ github.workspace }}/source-repo/data/LICENSE" "${{ github.workspace }}/target-repo/LICENSE"; then
                echo "LICENSE file copied successfully."
              else
                echo "Error: Failed to copy LICENSE file."
              fi
            else
              echo "License file already exists"
            fi
              
              # Stage and commit the changes
            cd "${{ github.workspace }}/target-repo"
            if [ -n "$(git status --porcelain)" ]; then
                git pull origin github-migration
                git add LICENSE
                git commit -S -m "Add LICENSE File - $(date +"%Y-%m-%d %H:%M:%S")" 
                git push origin github-migration
            else
                echo "No changes to commit."
            fi
           
            # Clean up
            rm -rf "${{ github.workspace }}/target-repo"
          done
        env:
          GPG_KEY_PASSPHRASE: ${{ secrets.PASSPHRASE }}
