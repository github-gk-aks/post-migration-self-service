name: Automated PRs with Dynamic Reviewers

on:
  workflow_dispatch:

jobs:
  create-pr:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Read Reviewers from File
      id: read_reviewers
      run: |
        REVIEWERS_FILE="data/reviewers.txt"
        mapfile -t repositories < <(awk '{print $1}' "$REVIEWERS_FILE" | sort -u)
        for repo in "${repositories[@]}"; do
            IFS='/' read -r org_name repo_name <<< "$repo"
            echo "Processing repository: $org_name/$repo_name"
        
        default_branch=$(git ls-remote --symref https://github.com/$repo HEAD | awk -F '/' '/^ref:/{print $NF}' | awk '{print $1}')

        echo "Default Branch is $default_branch"

        pr_number=$(curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GK_PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$repo/pulls \
            -d '{"title":"Migrating Changes","body":"Please pull these migration related changes","head":"github-migration","base":"'"$default_branch"'"}' | jq -r '.number')

        echo "Pull Request number for $repo is: $pr_number"

        # #REVIEWERS=$(cat "$REVIEWERS_FILE" | tr -d '\r')
        # #echo "REVIEWERS: $REVIEWERS"
        # #IFS=$'\n' read -ra REVIEWER_ARRAY <<< "$REVIEWERS"
        # readarray -t REVIEWER_ARRAY < "$REVIEWERS_FILE"

        # # for reviewer in "${REVIEWER_ARRAY[@]}"; do
        # #     echo "Reviewer: $reviewer"
        # # done
        # for i in "${REVIEWER_ARRAY[@]}"; do
        #     IFS=' ' read -ra REPO_REVIEWER <<< "$i"
        #         reviewers="${REPO_REVIEWER[@]:1}"  # Select all elements from index 1 to the end
        #         echo "Final reviewers: $reviewers"
         
        # done
        done

        
        #echo "::set-output name=reviewers::$REVIEWERS"

    # - name: Create Pull Request
    #   run: |
    #     # Set up your GitHub token as a secret in your repository
    #     GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}

    #     npm install -g @octokit/rest
    #     PR_URL=$(octokit pr create \
    #       --base main \
    #       --head feature-branch \
    #       --title "Automated PR" \
    #       --body "Your pull request description" \
    #       --token $GITHUB_TOKEN | jq -r '.url')

    #     # Read reviewers dynamically
    #     REVIEWERS="${{ steps.read_reviewers.outputs.reviewers }}"
    #     IFS=' ' read -ra REVIEWER_ARRAY <<< "$REVIEWERS"

    #     # Loop through reviewers and add them to the pull request
    #     for i in "${REVIEWER_ARRAY[@]}"; do
    #         IFS=':' read -ra REPO_REVIEWER <<< "$i"
    #         if [[ "${REPO_REVIEWER[0]}" == "$(basename $GITHUB_REPOSITORY)" ]]; then
    #         reviewers="${REPO_REVIEWER[@]:1}"  # Select all elements from index 1 to the end
    #         octokit pr create-review-request \
    #             --reviewers $reviewers \
    #             --token $GITHUB_TOKEN \
    #             --request-url $PR_URL
    #       fi
    #     done

    #     # If you want to use a different user for commit, you might need to set the git user information here

    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}