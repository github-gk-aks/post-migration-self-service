name: Distribute YML Files

on:
  issues:
    types:
      - opened
      - edited

# expected issue body input should be structured as follows:
  #     {
  #         "rep01": {
  #             "repository": "rep01",
  #             "organisation": "org01"
  #         },
  #         "rep02": {
  #             "repository": "rep02",
  #             "organisation": "org02"
  #         } 
  #     }

jobs:
  distribute-yml-files:
    if: contains(github.event.issue.labels.*.name, 'distribute-yml-files')
    runs-on: ubuntu-latest
    strategy:  
      matrix:
        repository: ${{ fromJson(github.event.issue.body).*.repository }}  # rep01, repo02
      max-parallel: 1
    steps:
      - name: Checkout central repository
        uses: actions/checkout@v4

      - name: Setup git
        run: |
            git config user.email ${{ secrets.GIT_COMMITTER_EMAIL }}
            git config user.name ${{ secrets.GIT_COMMITTER_NAME }}


      - name: Copy YML Files
        run: |
            repo='${{ matrix.repository }}'
            owner='${{ fromJSON(github.event.issue.body)[matrix.repository].organisation }}'
            echo "Processing repository: $owner/$repo"
            
            branch="github-migration"
           
            for file in files/*.yml; do
              workflow_file=".github/workflows/$(basename "$file")"
              content=$(cat "$file")  # Update this if your YML file is in a different location

              existing_file=$(curl -s -o /dev/null -w "%{http_code}" \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GK_PAT }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "https://api.github.com/repos/$owner/$repo/contents/$workflow_file?ref=$branch")


              if [ "$existing_file" -eq 404 ]; then
                echo "File does not exist. Creating..."
                curl -X PUT \
                -H "Accept: application/vnd.github.v3+json" \
                -H "Authorization: Bearer ${{ secrets.GK_PAT }}" \
                "https://api.github.com/repos/$owner/$repo/contents/$workflow_file" \
                -d @- <<EOF
              {
                "message": "Update $workflow_file",
                "content": "$(echo -n "$content" | base64)",
                "branch": "$branch"
              }
            EOF
              elif [ "$existing_file" -eq 200 ]; then
                echo "File already exists. Skipping..."
              else
                echo "Unexpected response: $existing_file. Exiting..."
                exit 1
              fi
            done


