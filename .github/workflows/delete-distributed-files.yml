name: Delete Distributed Files

on:
    issues:
      types:
        - opened
        - edited
  
  # expected issue body input should be structured as follows:
    #     {
    #         "rep01": {
    #             "repository": "rep01",
    #             "organisation": "org01"
    #         },
    #         "rep02": {
    #             "repository": "rep02",
    #             "organisation": "org02"
    #         } 
    #     }

jobs:
  delete-distributed-files:
    if: contains(github.event.issue.labels.*.name, 'delete-distribution')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repository: ${{ fromJson(github.event.issue.body).*.repository }} # Using JSON to pass the repo info
      max-parallel: 10
      fail-fast: false
    steps:
      - name: Checkout Central Repository
        uses: actions/checkout@v4
        with:
          path: ./source-repo
          token: ${{ secrets.GK_PAT }}

      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          repository: "${{ fromJSON(github.event.issue.body)[matrix.repository].organisation }}/${{ matrix.repository }}"
          path: "./target-repo"
          ref: "github-migration"
          token: ${{ secrets.GK_PAT }}

      - name: Setup Committer Email and Name
        run: |
          git config --global user.email ${{ secrets.GIT_COMMITTER_EMAIL }}
          git config --global user.name ${{ secrets.GIT_COMMITTER_NAME }}

      - name: Import GPG key
        run: |
            echo "${GPG_PRIVATE_KEY}" | gpg --batch --import
        env: 
            GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
  
      - name: Add the custom gpg siging program that passes the passphrase to the gpg CLI
        run: |
            rm -rf /tmp/gpg.sh
            echo '#!/bin/bash' >> /tmp/gpg.sh
            echo 'gpg --batch --pinentry-mode=loopback --passphrase $GPG_KEY_PASSPHRASE $@' >> /tmp/gpg.sh
            chmod +x /tmp/gpg.sh
  
      - name: Setup git
        run: |
              git config --global commit.gpgsign true
              git config --global user.signingkey $GPG_KEY_ID
              git config --global gpg.program /tmp/gpg.sh
        env:
              GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}

      - name: Cleanup input_migration folder
        run: |
          target_repo_path="./target-repo"
          has_changes=false

          echo "Cleanup Report for ${{ matrix.repository }}" >> "${{ github.workspace }}/source-repo/output/${{ matrix.repository }}-delete-distributed-files.txt" 2>&1
          echo "=================" >> "${{ github.workspace }}/source-repo/output/${{ matrix.repository }}-delete-distributed-files.txt" 2>&1

          input_migration_folder="$target_repo_path/input_migration"
          script_migration_folder="$target_repo_path/script_migration"
          workflows_folder="$target_repo_path/.github/workflows"
          workflow_files=("A.yml" "B.yml" "C.yml")

          if [ -d "$input_migration_folder" ]; then
            rm -rf "$input_migration_folder"
            echo "Deleted folder: $input_migration_folder" >> "${{ github.workspace }}/source-repo/output/${{ matrix.repository }}-delete-distributed-files.txt" 2>&1
            has_changes=true
          else
            echo "Folder not found: $input_migration_folder" >> "${{ github.workspace }}/source-repo/output/${{ matrix.repository }}-delete-distributed-files.txt" 2>&1
          fi

          if [ -d "$script_migration_folder" ]; then
            rm -rf "$script_migration_folder"
            echo "Deleted folder: $script_migration_folder" >> "${{ github.workspace }}/source-repo/output/${{ matrix.repository }}-delete-distributed-files.txt" 2>&1
            has_changes=true
          else
            echo "Folder not found: $script_migration_folder" >> "${{ github.workspace }}/source-repo/output/${{ matrix.repository }}-delete-distributed-files.txt" 2>&1
          fi

          if [ -d "$workflows_folder" ]; then
            for workflow_file in "${workflow_files[@]}"; do
              if [ -f "$workflows_folder/$workflow_file" ]; then
                rm "$workflows_folder/$workflow_file"
                echo "Deleted file: $workflows_folder/$workflow_file" >> "${{ github.workspace }}/source-repo/output/${{ matrix.repository }}-delete-distributed-files.txt" 2>&1
                has_changes=true              
              else
                echo "File not found: $workflows_folder/$workflow_file" >> "${{ github.workspace }}/source-repo/output/${{ matrix.repository }}-delete-distributed-files.txt" 2>&1
              fi
            done
          else
            echo "Folder not found: $workflows_folder" >> "$cleanup_report"
          fi
          
          if [ "$has_changes" = true ]; then
            cd "$target_repo_path"
            git add .
            git commit -m "Cleanup temporary files and folders - - $(date +"%Y-%m-%d %H:%M:%S")"
            git push origin github-migration
          else
            echo "No changes to commit." 
          fi
        env:
            GPG_KEY_PASSPHRASE: ${{ secrets.PASSPHRASE }}

      - name: Upload distribution delete report
        uses: actions/upload-artifact@v3
        with:
          name: delete-distribution-report
          path: ${{ github.workspace }}/source-repo/output/${{ matrix.repository }}-delete-distributed-files.txt
