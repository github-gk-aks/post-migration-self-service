name: Grant Repository Access to Org Secrets

on:
  workflow_dispatch:
    # inputs:
    #   secret_name:
    #     description: 'The name of the org secret'
    #     required: true
    #   organization:
    #     description: 'Name of the organization'
    #     required: true

jobs:
  grant-access:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Grant access to repositories
      env:
        GH_TOKEN: ${{ secrets.GK_PAT }}
      run: |
        mapfile -t secrets < "${{ github.workspace }}/secrets.txt"
        mapfile -t repositories < <(awk '{print $1}' "${{ github.workspace }}/repositories.txt" | sort -u)
        
        for secret in "${secrets[@]}"; do
          echo "Processing secret: $secret"
          
          # Initialize an array to hold repository IDs
          repo_ids=()

          for repo in "${repositories[@]}"; do
              IFS='/' read -r org_name repo_name <<< "$repo"
              echo "Processing repository: $repo"

              # Fetch the repository ID
              http_status_and_response=$(curl -w "%{http_code}\n" -L \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer $GH_TOKEN" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/$org_name/$repo_name)

              echo "$http_status_and_response"
                          
              repo_id=$(echo "$http_status_and_response" | jq -R 'tonumber' | jq '.id')
              http_status=$(echo "$http_status_and_response" | tail -n 1)
              repid_response=$(echo "$http_status_and_response" | sed '$d')
              repid_response_message=$(echo "$repid_response" | jq -r '.errors[0].message') # extract the error message from the response
              echo "Repository ID: $repo_id"

              # Check if the repository ID was successfully fetched
              if [[ $http_status == 201 ]]; then
                repo_ids+=("$repo_id")
                echo "$secret;$repo;Repository Id fetched successfully;Repository Id is $repo_id" >> "${{ github.workspace }}/source-repo/output/grant-org-secret-output.txt"
              else
                echo "$secret;$repo;Failed to fetch repository ID. Status code is $http_status;Response body is $repid_response_message" >> "${{ github.workspace }}/source-repo/output/grant-org-secret-output.txt"
              fi
          done

          # echo "Collected repository IDs: ${repo_ids[@]}"

          if [ ${#repo_ids[@]} -eq 0 ]; then
            echo "$secret;$repo;NA;No valid repository IDs found for secret $secret. Skipping." >> "${{ github.workspace }}/source-repo/output/grant-org-secret-output.txt"
            continue
          fi

          # Convert the array of repository IDs to a JSON array
          repo_ids_json=$(printf '%s\n' "${repo_ids[@]}" | jq -R 'tonumber' | jq -s .)

          # echo "Selected repository IDs: $repo_ids_json"

          echo "Granting access to repositories for secret $secret"

          # Grant access to the repositories for the secret and capture HTTP status
          http_status_and_response_grant=$(curl -w "%{http_code}\n" -L \
              -X PUT \
              -H "Authorization: Bearer $GH_TOKEN" \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/orgs/$org_name/actions/secrets/$secret/repositories \
              -d "{\"selected_repository_ids\": $repo_ids_json}")

          # http_status="${response: -3}"
          # response_body="${response:0:${#response}-3}"

          http_status_grant=$(echo "$http_status_and_response_grant" | tail -n 1)
          repid_response_grant=$(echo "$http_status_and_response" | sed '$d')
          repid_response_message_grant=$(echo "$repid_response_grant" | jq -r '.errors[0].message') # extract the error message from the response

          # echo "HTTP Status: $http_status"
          # echo "Response Body: $response_body"

          if [ "$http_status_grant" -eq 204 ]; then
              echo "$secret;NA;Successfully granted access for secret $secret to all the repositories specified;NA" >> "${{ github.workspace }}/source-repo/output/grant-org-secret-output.txt"
          else
              echo "$secret;NA;Failed to grant access for secret $secret;Error Message is $repid_response_message_grant" >> "${{ github.workspace }}/source-repo/output/grant-org-secret-output.txt"
          fi
        done