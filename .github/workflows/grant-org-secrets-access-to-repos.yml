name: Grant Repository Access to Org Secrets

on:
  workflow_dispatch:
    # inputs:
    #   secret_name:
    #     description: 'The name of the org secret'
    #     required: true
    #   organization:
    #     description: 'Name of the organization'
    #     required: true

jobs:
  grant-access:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Grant access to repositories
      env:
        GH_TOKEN: ${{ secrets.GK_PAT }}
      run: |
        mapfile -t secrets < "${{ github.workspace }}/secrets.txt"
        mapfile -t repositories < <(awk '{print $1}' "${{ github.workspace }}/repositories.txt" | sort -u)
        
        for secret in "${secrets[@]}"; do
          echo "Processing secret: $secret"
          
          # Initialize an array to hold repository IDs
          repo_ids=()

          for repo in "${repositories[@]}"; do
              IFS='/' read -r org_name repo_name <<< "$repo"
              echo "Processing repository: $repo"

              # Fetch the repository ID
              repo_id=$(curl -H "Authorization: Bearer $GH_TOKEN" -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/$org_name/$repo_name | jq '.id')
              echo "Repository ID: $repo_id"

              # Add the repository ID to the array
              repo_ids+=($repo_id)
          done

          # Convert the array of repository IDs to a JSON array
          repo_ids_json=$(printf '%s\n' "${repo_ids[@]}" | jq -R . | jq -s .)

          echo "REPO-ID's : $repo_ids"

          echo "Granting access to repositories for secret $secret"

          # Grant access to the repositories for the secret and capture HTTP status
          response=$(curl -X PUT -o /dev/null -w "%{http_code}" -s \
              -H "Authorization: Bearer $GH_TOKEN" \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/orgs/$org_name/actions/secrets/$secret/repositories \
              -d "{\"selected_repository_ids\": $repo_ids_json}")

          echo "HTTP Status: $response"

          if [ "$response" -eq 204 ]; then
              echo "Successfully granted access for secret $secret to the repositories"
          else
              echo "Failed to grant access for secret $secret with status $response"
          fi
        done