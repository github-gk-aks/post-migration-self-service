name: Delete Specific Workflow Runs from Multiple Repositories

on:
  workflow_dispatch:
    inputs:
      workflow-names:
        description: 'Comma-separated list of workflow names to delete (e.g., "Check Migration Status","Check Github Migration Branch")'
        required: true

jobs:
  delete-selected-workflows:
    env:
        GH_TOKEN: ${{ secrets.GK_PAT }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GK_PAT }}
          path: ./source-repo

    #   - name: Read Repositories List
    #     id: read-repos
    #     run: |
    #       mapfile -t repositories < "${{ github.workspace }}/source-repo/repositories.txt"
    #       echo "REPOSITORIES=${repositories[*]}" >> $GITHUB_ENV

      - name: Delete Workflow Runs
        run: |
        
          mapfile -t repositories < "${{ github.workspace }}/source-repo/repositories.txt"

          WORKFLOW_NAMES=${{ github.event.inputs['workflow-names'] }}
          IFS=',' read -ra NAMES_ARRAY <<< "$WORKFLOW_NAMES"

          for repo in "${repositories[@]}"; do
              IFS='/' read -r org_name repo_name <<< "$repo"
              echo "Processing repository: $org_name/$repo_name"

            for workflow_name_input in "${NAMES_ARRAY[@]}"; do
                workflow_name_input=$(echo "$workflow_name_input" | xargs)  # Remove surrounding quotes and leading/trailing whitespace
                echo "Fetching runs for workflow: "$workflow_name_input" in repository: $org_name/$repo_name"
                workflows=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/$org_name/$repo_name/actions/workflows)
                workflow_names=$(echo "$workflows" | jq -r '.workflows[].name')
                echo "Workflow names: $workflow_names"

                for workflow in $(echo "$workflows" | jq -c '.workflows[]'); do
                    echo "Workflow: $workflow"
                    workflow_name=$(echo "$workflow" | jq -r '.name')
                    workflow_id=$(echo "$workflow" | jq -r '.id')

                    if [ "$workflow_name" == "$workflow_name_input" ]; then
                        echo "Deleting workflow: $workflow_name"
                        # Uncomment the line below to delete the workflow
                        gh api --method DELETE -H "Accept: application/vnd.github+json" /repos/$org_name/$repo_name/actions/workflows/$workflow_id
                    fi
                done

                #echo "Workflow ID's are : $workflow_id"   
                #workflow_id=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/$org_name/$repo_name/actions/workflows | jq -r --arg NAME "$workflow_name" '.workflows[] | select(.name == $NAME) | .id')

                # if [ -n "$workflow_id" ]; then
                #   echo "Workflow ID for $workflow_name: $workflow_id"
                #   runs=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/$org_name/$repo_name/actions/workflows/$workflow_id/runs | jq -r '.workflow_runs[].id')

                #   echo "Runs for workflow $workflow_name: $runs"

                #   for run_id in $runs; do
                #     echo "Deleting run ID: $run_id"
                #     response=$(gh api --method DELETE -H "Accept: application/vnd.github.v3+json" /repos/$org_name/$repo_name/actions/runs/$run_id)

                #     if [ $? -eq 0 ]; then
                #       echo "Successfully deleted run ID: $run_id"
                #     else
                #       echo "Failed to delete run ID: $run_id"
                #     fi
                #   done
                # else
                #   echo "No workflow found with name: $workflow_name in repository: $org_name/$repo_name"
                # fi
            done
          done
