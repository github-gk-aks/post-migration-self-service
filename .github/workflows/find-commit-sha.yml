name: Fetch Latest Commit Sha

on:
  workflow_dispatch:

jobs:
  find-commit-sha:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout central repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_GITHUB_PAT }}
          path: ./source-repo

      - name: Set up jq
        run: sudo apt-get install -y jq

      - name: Create output directory
        run: |
          if [ ! -d "${{ github.workspace }}/source-repo/output" ]; then
            mkdir -p "${{ github.workspace }}/source-repo/output"
          fi

      - name: Iterate Over Repos
        run: |
            #!/bin/bash

            # Define the GitHub token and output file
            GITHUB_TOKEN="${{ secrets.GH_GITHUB_PAT }}"
            OUTPUT_FILE="${{ github.workspace }}/source-repo/output/branches_and_commits.txt"
        
            # Clear or create the output file
            > $OUTPUT_FILE
        
            # Read the repositories from the file
            mapfile -t repositories < "${{ github.workspace }}/source-repo/repositories.txt"
        
            # Loop through each repository
            for repo in "${repositories[@]}"; do
                IFS='/' read -r org_name repo_name <<< "$repo"
                echo "Processing repository: $org_name/$repo_name"
            
                # Get all branches for the repository
                branches=$(curl -s -L \
                    -H "Accept: application/vnd.github+json" \
                    -H "Authorization: Bearer ${GITHUB_TOKEN}" \
                    -H "X-GitHub-Api-Version: 2022-11-28" \
                    "https://api.github.com/repos/$org_name/$repo_name/branches" | jq -r '.[].name')
            
                # Loop through each branch
                for branch in $branches; do
                    # Get the latest commit SHA for the branch
                    latest_commit_sha=$(curl -s -L \
                        -H "Accept: application/vnd.github+json" \
                        -H "Authorization: Bearer ${GITHUB_TOKEN}" \
                        -H "X-GitHub-Api-Version: 2022-11-28" \
                        "https://api.github.com/repos/$org_name/$repo_name/commits/$branch" | jq -r '.sha')
                
                    # Save the results to the output file
                    echo -e "${org_name}/${repo_name}\t${branch}\t${latest_commit_sha}" >> $OUTPUT_FILE
                done
            done
        
            echo "Completed processing all repositories. Results saved in ${OUTPUT_FILE}"

      - name: Upload branches and commits artifact
        uses: actions/upload-artifact@v4
        with:
            name: branches_and_commits
            path: ${{ github.workspace }}/source-repo/output/branches_and_commits.txt

  convert-to-excel:
    runs-on: ubuntu-latest
    needs: find-strings
            
    steps:
        - name: Download branches and commits artifact
          uses: actions/download-artifact@v4
          with:
            name: branches_and_commits
            path: ${{ github.workspace }}/source-repo/output/branches_and_commits.txt
            
        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: '3.10'
            
        - name: Install dependencies
          run: pip install pandas openpyxl
            
        - name: Convert TXT to Excel
          run: |
                python -c "
                import pandas as pd
            
                # Read the tab-separated text file
                df = pd.read_csv('${{ github.workspace }}/source-repo/output/branches_and_commits.txt', sep='\t', header=None, names=['Repository', 'Branch', 'Commit SHA'])
            
                # Convert the DataFrame to an Excel file
                df.to_excel('${{ github.workspace }}/source-repo/output/branches_and_commits.xlsx', index=False)
                    "
            
        - name: Upload Excel artifact
          uses: actions/upload-artifact@v4
          with:
            name: branches_and_commits_excel
            path: ${{ github.workspace }}/source-repo/output/branches_and_commits.xlsx
        
        
      