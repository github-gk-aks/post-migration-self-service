name: Trigger Repository Workflows

on:
  issues:
    types:
      - opened
      - edited

# expected issue body input should be structured as follows:
  #     {
  #         "rep01": {
  #             "repository": "rep01",
  #             "organisation": "org01"
  #         },
  #         "rep02": {
  #             "repository": "rep02",
  #             "organisation": "org02"
  #         } 
  #     }

jobs:
  trigger-repo-workflows:
    if: contains(github.event.issue.labels.*.name, 'post-mg-steps')
    runs-on: ubuntu-latest
    strategy:  
      matrix:
        repository: ${{ fromJson(github.event.issue.body).*.repository }}  # rep01, repo02
      max-parallel: 5
    steps:
      - name: Trigger Replace String  org/repo in Other Repositories
        id: step-1
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GK_PAT}}
          script: |
            const response = await github.rest.actions.createWorkflowDispatch({
              owner: '${{ fromJSON(github.event.issue.body)[matrix.repository].organisation }}',
              repo: '${{ matrix.repository}}',
              workflow_id: 'replace-string-all.yml', 
              ref: 'github-migration' ,
              inputs: {
                repository: '${{ matrix.repository }}',
                organisation: '${{ fromJSON(github.event.issue.body)[matrix.repository].organisation }}'
              }
            });
            console.log(response.data);

      - name: Wait for org/rep Workflow Run to Complete
        id: wait-for-workflow
        run: |
          owner='${{ fromJSON(github.event.issue.body)[matrix.repository].organisation }}'
          repo='${{ matrix.repository }}'
          branch='github-migration'
          workflow_run_id=$(curl -s \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ secrets.GK_PAT }}" \
            "https://api.github.com/repos/$owner/$repo/actions/runs?branch=$branch&event=workflow_dispatch" \
            | jq -r '.workflow_runs[0].id')
          echo "Workflow Run ID: $workflow_run_id"

          status="queued"
          conclusion="null"
          while [[ "$status" != "completed" ]]; do
            sleep 30
            response=$(curl -s \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: Bearer ${{ secrets.GK_PAT }}" \
              "https://api.github.com/repos/$owner/$repo/actions/runs/$workflow_run_id")
            status=$(echo "$response" | jq -r '.status')
            conclusion=$(echo "$response" | jq -r '.conclusion')
            echo "Status: $status, Conclusion: $conclusion"
          done

          if [ "$conclusion" != "success" ]; then
            echo "Workflow run failed or cancelled. Exiting..."
            exit 1
          else
            echo "Workflow run completed successfully."
          fi

      # - name: Wait for 1 minute
      #   run: sleep 60

      - name: Trigger Replace String Team in Other Repositories
        run: |
          echo "Triggering workflow in ${{ matrix.repository }}"
          curl -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GK_PAT }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${{ fromJSON(github.event.issue.body)[matrix.repository].organisation }}/${{ matrix.repository }}/actions/workflows/replace-string-team.yml/dispatches \
              -d '{
              "ref": "github-migration",
              "inputs": {
                  "repository": "${{ matrix.repository }}"
              }
              }'

      - name: Wait for team Workflow Run to Complete
        run: |
          owner='${{ fromJSON(github.event.issue.body)[matrix.repository].organisation }}'
          repo='${{ matrix.repository }}'
          branch='github-migration'
          workflow_run_id=$(curl -s \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ secrets.GK_PAT }}" \
            "https://api.github.com/repos/$owner/$repo/actions/runs?branch=$branch&event=workflow_dispatch" \
            | jq -r '.workflow_runs[0].id')
          echo "Workflow Run ID: $workflow_run_id"

          status="queued"
          conclusion="null"
          while [[ "$status" != "completed" ]]; do
            sleep 30
            response=$(curl -s \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: Bearer ${{ secrets.GK_PAT }}" \
              "https://api.github.com/repos/$owner/$repo/actions/runs/$workflow_run_id")
            status=$(echo "$response" | jq -r '.status')
            conclusion=$(echo "$response" | jq -r '.conclusion')
            echo "Status: $status, Conclusion: $conclusion"
          done
          
          echo "Final Status: $status, Final Conclusion: $conclusion"
          if [ "$conclusion" != "success" ]; then
            echo "Workflow run failed or cancelled. Exiting..."
            exit 1
          else
            echo "Workflow run completed successfully."
          fi
        
      # - name: Wait for 1 minute
      #   run: sleep 60

      - name: Trigger Replace String for Org Only in Other Repositories
        run: |
          echo "Triggering workflow in ${{ matrix.repository }}"
          curl -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GK_PAT }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${{ fromJSON(github.event.issue.body)[matrix.repository].organisation }}/${{ matrix.repository }}/actions/workflows/replace-string-org.yml/dispatches \
              -d '{
              "ref": "github-migration",
              "inputs": {
                  "repository": "${{ matrix.repository }}"
              }
              }'