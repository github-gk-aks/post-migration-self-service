name: Trigger Repository Workflows

on:
  issues:
    types:
      - opened
      - edited

# expected issue body input should be structured as follows:
  #     {
  #         "rep01": {
  #             "repository": "rep01",
  #             "organisation": "org01"
  #         },
  #         "rep02": {
  #             "repository": "rep02",
  #             "organisation": "org02"
  #         } 
  #     }

jobs:
  trigger-repo-workflows:
    if: contains(github.event.issue.labels.*.name, 'post-mg-steps')
    runs-on: ubuntu-latest
    strategy:  
      matrix:
        repository: ${{ fromJson(github.event.issue.body).*.repository }}  # rep01, repo02
      max-parallel: 5
    steps:
      # - name: Trigger Organization Change Workflow
      #   id: step-1
      #   uses: actions/github-script@v6
      #   with:
      #     github-token: ${{ secrets.GK_PAT}}
      #     script: |
      #       const response = await github.rest.actions.createWorkflowDispatch({
      #         owner: '${{ fromJSON(github.event.issue.body)[matrix.repository].organisation }}',
      #         repo: '${{ matrix.repository}}',
      #         workflow_id: 'replace-string-all.yml', 
      #         ref: 'github-migration'  
      #       });
      #       console.log(response.data);

      # - name: Wait for 1 minute
      #   run: sleep 60

      - name: Trigger Replace String All in Other Repositories
        id: step-1
        run: |
          echo "Triggering workflow in ${{ matrix.repository }}"
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GK_PAT }}" \
          https://api.github.com/repos/${{ fromJSON(github.event.issue.body)[matrix.repository].organisation }}/${{ matrix.repository }}/dispatches \
            -d '{
              "event_type": "replace-string-all",
              "client_payload": {
                "repository": "${{ matrix.repository }}",
                "ref": "github-migration"
              }
            }'

      # - name: Wait for 1 minute
      #   run: sleep 60

      # - name: Trigger Replace String for Org Only in Other Repositories
      #   id: step-3
      #   if: steps.step-2.outcome == 'success'
      #   run: |
      #     echo "Triggering workflow in ${{ matrix.repository }}"
      #     curl -X POST \
      #         -H "Accept: application/vnd.github+json" \
      #         -H "Authorization: Bearer ${{ secrets.GK_PAT }}" \
      #         -H "X-GitHub-Api-Version: 2022-11-28" \
      #     https://api.github.com/repos/${{ fromJSON(github.event.issue.body)[matrix.repository].organisation }}/${{ matrix.repository }}/actions/workflows/replace-string-team.yml/dispatches \
      #         -d '{
      #         "ref": "github-migration",
      #         "inputs": {
      #             "repository": "${{ matrix.repository }}"
      #         }
      #         }'
        
      # - name: Wait for 1 minute
      #   run: sleep 60

      # - name: Trigger Replace String for Org Only in Other Repositories
      #   id: step-4
      #   if: steps.step-3.outcome == 'success'
      #   run: |
      #     echo "Triggering workflow in ${{ matrix.repository }}"
      #     curl -X POST \
      #         -H "Accept: application/vnd.github+json" \
      #         -H "Authorization: Bearer ${{ secrets.GK_PAT }}" \
      #         -H "X-GitHub-Api-Version: 2022-11-28" \
      #     https://api.github.com/repos/${{ fromJSON(github.event.issue.body)[matrix.repository].organisation }}/${{ matrix.repository }}/actions/workflows/replace-string-org.yml/dispatches \
      #         -d '{
      #         "ref": "github-migration",
      #         "inputs": {
      #             "repository": "${{ matrix.repository }}"
      #         }
      #         }'