name: Update Runner Name

on:
    workflow_dispatch:
    #inputs:
      #branch:
        #description: 'Target Branch'
        #required: true

jobs:
  replace-runs-on:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
            token: ${{ secrets.GK_PAT }}
            path: ./source-repo
   
      - name: Import GPG key
        run: |
          echo "${GPG_PRIVATE_KEY}" | gpg --batch --import
        env: 
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Add the custom gpg signing program that passes the passphrase to the gpg CLI
        run: |
          rm -rf /tmp/gpg.sh
          echo '#!/bin/bash' >> /tmp/gpg.sh
          echo 'gpg --batch --pinentry-mode=loopback --passphrase $GPG_KEY_PASSPHRASE $@' >> /tmp/gpg.sh
          chmod +x /tmp/gpg.sh

      - name: Setup git
        run: |
          git config --global user.email ${{ secrets.GIT_COMMITTER_EMAIL }}
          git config --global user.name ${{ secrets.GIT_COMMITTER_NAME }}
          git config --global commit.gpgsign true
          git config --global user.signingkey $GPG_KEY_ID
          git config --global gpg.program /tmp/gpg.sh
        env:
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}

      - name: Replace Strings in Workflow Files
        run: |
          mapfile -t repositories < "${{ github.workspace }}/source-repo/repositories.txt"
          for repo in "${repositories[@]}"; do
              IFS='/' read -r org_name repo_name <<< "$repo"
              echo "Processing repository: $org_name/$repo_name"                       
          
              # Clone the repository
              git clone -b github-migration "https://${{ secrets.GK_PAT }}@github.com/$repo.git" "./target-repo"
          
              # Check if .github/workflows folder exists
              workflows_folder="./target-repo/.github/workflows"
              if [ ! -d "$workflows_folder" ]; then
                echo "$repo_name;NA;.github/workflows folder does not exist" >> "${{ github.workspace }}/source-repo/replace_runner_output.txt"
                continue
              else
                if find "./target-repo/.github/workflows" -type f \( -name "*.yaml" -o -name "*.yml" \) -print -quit | grep -q .; then
                    yaml_count=$(find "./target-repo/.github/workflows" -type f -name "*.yaml" | wc -l)
                    yml_count=$(find "./target-repo/.github/workflows" -type f -name "*.yml" | wc -l)
                    echo "Total count of YML files for repo $repo_name is: $yml_count"
                    echo "Total count of YAML files for repo $repo_name is: $yaml_count"
                fi

                if [ "$yml_count" -eq 0 ]; then
                  echo "$repo_name;NA;No YML files present" >> "${{ github.workspace }}/source-repo/replace_runner_output.txt"
                fi
                if [ "$yaml_count" -eq 0 ]; then
                  echo "$repo_name;NA;No YAML files present" >> "${{ github.workspace }}/source-repo/replace_runner_output.txt"
                fi

                # Iterate over .yml and .yaml files in .github/workflows folder
                for file in ./target-repo/.github/workflows/*.yml; do
                  if [ -e "$file" ]; then
                    case "$(basename "$file")" in
                        secret-migration-environment.yml|secret-migration-repository.yml|call-env-secret.yml|call-rep-secret.yml|replace-string-org-only.yml|replace-string-org-repo.yml|replace-string-team-only.yml|replace-string-team-url.yml)
                            # Skip these files
                            ;;
                        *)
                            # Replace ubuntu-latest with windows-latest (case insensitive)
                            sed -i 's/ubuntu-latest/windows-latest/Ig' "$file"
                            echo "$repo_name;$file;String Replaced Successfully" >> "${{ github.workspace }}/source-repo/replace_runner_output.txt"
                            ;;
                    esac
                  fi
                done
                for file in ./target-repo/.github/workflows/*.yaml; do
                  if [ -e "$file" ]; then
                      case "$(basename "$file")" in
                          secret-migration-environment.yml|secret-migration-repository.yml|call-env-secret.yml|call-rep-secret.yml|replace-string-org-only.yml|replace-string-org-repo.yml|replace-string-team-only.yml|replace-string-team-url.yml)
                              # Skip these filess
                              ;;
                          *)
                              # Replace ubuntu-latest with windows-latest (case insensitive)
                              sed -i 's/ubuntu-latest/windows-latest/Ig' "$file"
                              echo "$repo_name;$file;String Replaced Successfully" >> "${{ github.workspace }}/source-repo/replace_runner_output.txt"
                              ;;
                      esac
                  fi
                done
              fi
              cd "./target-repo"

              if [ -n "$(git status --porcelain)" ]; then
                git add .
                git commit -S -m "Replace Runner - $(date +"%Y-%m-%d %H:%M:%S")"
                git push origin github-migration
              else
              cho "$repo_name;NA;String Not Found" >> "${{ github.workspace }}/source-repo/replace_runner_output.txt"
              fi
              cd ..
              rm -rf "./target-repo"
          done
        env:
            GPG_KEY_PASSPHRASE: ${{ secrets.PASSPHRASE }}
        
      - name: Upload runner change report as artifact
        uses: actions/upload-artifact@v4
        with:
            name: runner-change-report
            path: ${{ github.workspace }}/source-repo

      # - name: Check for Changes
      #   id: check_changes
      #   run: |
      #     if git diff --quiet; then
      #       echo "No changes to commit. Skipping commit step."
      #       echo "::set-output name=changes::false"
      #     else
      #       echo "::set-output name=changes::true"
      #     fi
      #   shell: bash

      # - name: Commit Changes
      #   if: steps.check_changes.outputs.changes == 'true'
      #   run: |
      #       git config user.email ${{ secrets.GIT_COMMITTER_EMAIL }}
      #       git config user.name ${{ secrets.GIT_COMMITTER_NAME }}
      #       git add .
      #       git commit -m "Replace runs-on parameter - $(date +"%Y-%m-%d %H:%M:%S")"
      #       git push  
      #   working-directory: ${{ github.workspace }}
      #   env:
      #       GITHUB_TOKEN: ${{ secrets.GK_PAT }}
